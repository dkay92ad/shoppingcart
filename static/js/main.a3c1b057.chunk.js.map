{"version":3,"sources":["components/footer-details/FooterDetailsComponent.js","components/modal/ModalComponent.js","components/error-boundary/ErrorBoundaryComponent.js","App.js","serviceWorker.js","index.js"],"names":["FooterDetails","props","className","cartQty","cartTotalPrice","disabled","onClick","checkoutHandler","ModalComponent","title","closeModalHandler","ErrorBoundaryComponent","state","hasError","error","info","console","log","process","this","children","Component","ProductComponent","React","lazy","App","setState","showModalPopup","productAddHandler","price","prevState","parseInt","productRemoveHandler","products","fetch","then","response","json","data","product_list","catch","err","productsArrayDisplay","map","product","key","Product_id","fallback","quantity","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","waitingServiceWorker","waiting","postMessage","type","link","createElement","classList","add","setAttribute","innerHTML","e","preventDefault","querySelector","appendChild"],"mappings":"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","file":"static/js/main.a3c1b057.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FooterDetailsComponent.css';\r\n\r\nconst FooterDetails = (props) => {\r\n    return (\r\n        <div className=\"footer-details\">\r\n            <div className=\"footer-left\">\r\n              <div className=\"left quantity\">Qty {props.cartQty}</div>\r\n              <div className=\"left total\">Total {props.cartTotalPrice}</div>\r\n            </div>\r\n            <button \r\n            className = \"footer-right\" \r\n            disabled = {!props.cartTotalPrice}\r\n            onClick = {() => {\r\n              props.checkoutHandler();\r\n            }}>CHECKOUT</button>\r\n          </div>\r\n    );\r\n};\r\n\r\nexport default FooterDetails;","import React from 'react';\r\nimport './ModalComponent.css';\r\n\r\nconst ModalComponent = (props) => {\r\n    return (\r\n        <div className=\"modal-popup\">\r\n            <div \r\n            title=\"Close\" \r\n            className=\"close-modal-popup\" \r\n            onClick = {()=>{props.closeModalHandler()}}>X</div>\r\n            <div className=\"modal-content\">\r\n            <div className=\"total-price\">Total price: â‚¹ {props.cartTotalPrice}</div>\r\n            <div className=\"trans-success\">Transaction successful!</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalComponent;","import React, { Component } from 'react';\r\nimport './ErrorBoundaryComponent.css';\r\n\r\nclass ErrorBoundaryComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(info);\r\n        }\r\n        //process.env.NODE_ENV = 'production'\r\n        console.log(process.env.NODE_ENV);\r\n        console.log(info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n          return (\r\n            <div>\r\n              <h3>\r\n                We encountered a problem while loading the Shopping App.\r\n              </h3>\r\n              <h5>\r\n                We sincerely regret the inconvenience caused.\r\n              </h5>\r\n            </div>\r\n          );\r\n        }\r\n    \r\n        return this.props.children; \r\n      }\r\n}\r\n\r\nexport default ErrorBoundaryComponent;","import React, { Component, Suspense } from 'react';\nimport './App.css';\nimport FooterDetailsComponent from './components/footer-details/FooterDetailsComponent';\nimport ModalComponent from './components/modal/ModalComponent';\nimport ErrorBoundaryComponent from './components/error-boundary/ErrorBoundaryComponent'; \nconst ProductComponent = React.lazy(() => import('./components/product/ProductComponent'));\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      products: [],\n      cartQty: 0,\n      cartTotalPrice: 0,\n      showModalPopup: false\n    }\n  }\n\n  componentDidMount(){\n    fetch('data/data.json').then(\n      (response) => {\n        return response.json();\n      }\n    ).then(\n      (data) => {\n        //console.log(data);\n        this.setState({products: data.product_list});\n      }\n    ).catch((err) => {\n      console.log(err);\n    });\n  }\n  componentDidUpdate(){\n    console.log('conponentDidUpdate...');\n    /*this.setState(() => {\n      throw new Error('hi');\n    })*/\n  }\n  checkoutHandler = () => {\n    this.setState({showModalPopup: true});\n  }\n  productAddHandler = (price) => {\n    this.setState((prevState) => ({cartQty: prevState.cartQty + 1 ,\n      cartTotalPrice: parseInt(prevState.cartTotalPrice) + parseInt(price)}));\n  }\n  productRemoveHandler = (price) => {\n    this.setState((prevState) => ({cartQty: prevState.cartQty - 1 ,\n      cartTotalPrice: prevState.cartTotalPrice - price}));\n  }\n  closeModalHandler = () => {\n    this.setState({showModalPopup: false});\n  }\n\n  render() {\n    const productsArrayDisplay = this.state.products.map((product) => {\n      return (\n        <Suspense key={product.Product_id} fallback={<div>Loading...</div>}>\n          <ProductComponent \n          key={product.Product_id} \n          product = {product} \n          quantity = {this.state.cartQty}\n          productAddHandler = {this.productAddHandler}\n          productRemoveHandler = {this.productRemoveHandler} />\n        </Suspense>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <ErrorBoundaryComponent>\n          {productsArrayDisplay}\n          {this.state.showModalPopup && <ModalComponent \n          closeModalHandler = {this.closeModalHandler}\n          cartTotalPrice = {this.state.cartTotalPrice}\n          />}\n          <footer>\n            <FooterDetailsComponent \n            cartQty = {this.state.cartQty} \n            cartTotalPrice = {this.state.cartTotalPrice}\n            checkoutHandler = {this.checkoutHandler}\n            />\n          </footer>\n        </ErrorBoundaryComponent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\ntry{\n    ReactDOM.render(<App />, document.getElementById('root'));\n}\ncatch(error){\n    console.error('Error intercepted!', error);\n}\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register({\n    onUpdate: onUpdateHandler\n   });\n\nfunction onUpdateHandler(registration) {\n\n    // Make sure that any new version of a service worker will take over the page \n    // and become activated immediately.\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  \n    const link = document.createElement(\"a\");\n    link.classList.add(\"update-notification\");\n    link.setAttribute(\"href\", \"#\");\n    link.innerHTML = \"Update is available. Click here to install.\";\n  \n    link.addEventListener(\"click\", e => {\n      e.preventDefault();\n      window.location.reload();\n    });\n  \n    document.querySelector(\"body\").appendChild(link);\n  }"],"sourceRoot":""}